<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on Marios Kanakis</title>
    <link>https://mkanakis.github.io/tags/development/</link>
    <description>Recent content in development on Marios Kanakis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved.</copyright>
    <lastBuildDate>Fri, 22 May 2020 14:01:29 +0200</lastBuildDate>
    
	<atom:link href="https://mkanakis.github.io/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JWT Authentication with SignalR and IdentityServer4</title>
      <link>https://mkanakis.github.io/posts/2_jwtauthentication_signalr_identityserver/</link>
      <pubDate>Fri, 22 May 2020 14:01:29 +0200</pubDate>
      
      <guid>https://mkanakis.github.io/posts/2_jwtauthentication_signalr_identityserver/</guid>
      <description>If you ever worked with SignalR and IdentityServer4, you probably did some &amp;ldquo;googling&amp;rdquo; around to figure how the heck JWT authentication works.
Especially since, the token might not be anymore in the request&amp;rsquo;s &amp;lsquo;Authentication&amp;rsquo; attribute, and with SignalR&amp;rsquo;s preference to WebSocket and fallback transport options.
Maybe you found a lot of answers, maybe not.
In any case, the simplest one I have come across with is the following:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  services.</description>
    </item>
    
  </channel>
</rss>